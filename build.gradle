buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "14"
group= "gliby.minecraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "glibysphysics"

minecraft {
    version = "1.8-11.14.3.1450"
     if(file('../run').exists()) {
    	runDir = "../run/assets"
    } else {
    	runDir = "assets"
    }
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20141130"
}

dependencies {
	compile files('lib/commons-math.jar')
	compile files('lib/gdx-bullet.jar')
	compile files('lib/gdx-bullet-natives.jar')
	compile files('lib/gdx.jar')
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	def outputDir = file("${buildDir}/unpacked/dist")

	
	from zipTree(file('lib/commons-math.jar'))
	into outputDir
	
	from zipTree(file('lib/gdx-bullet.jar'))
	into outputDir
	
	from zipTree(file('lib/gdx-bullet-natives.jar'))
	into outputDir

	from zipTree(file('lib/gdx.jar'))
	into outputDir
	
}
jar {
	manifest {
		attributes 'FMLAT' : 'GlibysPhysics_at.cfg'
	}
}
